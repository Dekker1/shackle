FlatZinc {
    variables: {
        "a": Variable {
            ty: Int,
            domain: Some(
                Int(
                    RangeList::from(1..=100),
                ),
            ),
            value: None,
            ann: [],
            defined: false,
            introduced: false,
        },
        "c": Variable {
            ty: Bool,
            domain: None,
            value: None,
            ann: [],
            defined: true,
            introduced: false,
        },
        "x": Variable {
            ty: Float,
            domain: Some(
                Float(
                    RangeList::from(1.0..=100.0),
                ),
            ),
            value: None,
            ann: [],
            defined: false,
            introduced: false,
        },
    },
    arrays: {},
    constraints: [
        Constraint {
            id: "my_float_in",
            args: [
                Literal(
                    Identifier(
                        "x",
                    ),
                ),
                Literal(
                    FloatSet(
                        RangeList::from_iter([1.5..=3.2, 5.4..=5.4, 10.3..=10.3]),
                    ),
                ),
            ],
            defines: None,
            ann: [],
        },
        Constraint {
            id: "set_in_reif",
            args: [
                Literal(
                    Identifier(
                        "a",
                    ),
                ),
                Literal(
                    IntSet(
                        RangeList::from_iter([1..=12, 14..=14, 19..=19]),
                    ),
                ),
                Literal(
                    Identifier(
                        "c",
                    ),
                ),
            ],
            defines: Some(
                "c",
            ),
            ann: [],
        },
    ],
    output: [
        "x",
        "a",
        "c",
    ],
    solve: SolveObjective {
        method: Satisfy,
        objective: None,
        ann: [],
    },
    version: "",
}
